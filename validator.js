// Generated by CoffeeScript 1.12.6
(function() {
  var slice = [].slice;

  jQuery(function() {
    return (function($) {
      var EMAIL_PATTERN, Validation, createObjectSelector, hasCapitalLetter, hasDigit, isArray, isMinimumLength, isValidEmail, selectEmail, selectPassword, sequential, setup, toArray;
      EMAIL_PATTERN = /^[\w-.]+@(?:\w+\.)+[a-z]{2,}$/i;
      Validation = (function() {
        function Validation(validationFn, element) {
          this.validationFn = validationFn;
          this.element = $(element);
        }

        Validation.prototype.showElement = function() {
          return this.element.show();
        };

        Validation.prototype.hideElement = function() {
          return this.element.hide();
        };

        Validation.prototype.apply = function(self, args) {
          return this.validationFn.apply(self, args);
        };

        return Validation;

      })();
      toArray = function(obj) {
        return [].slice.call(obj);
      };
      isArray = Array.isArray || function(value) {
        return {}.toString.call(value) === '[object Array]';
      };
      createObjectSelector = function(selector) {
        return function(fn) {
          return function(obj) {
            return fn(obj[selector]);
          };
        };
      };
      sequential = function() {
        var fns, reducer;
        fns = slice.call(arguments);
        if (isArray(arguments[0])) {
          fns = arguments[0];
        }
        reducer = function(cb) {
          return function(args, fn) {
            var result;
            if (!isArray(args[0])) {
              result = fn.apply(this, args);
            }
            if (isArray(args[0])) {
              result = fn.apply(this, args[0]);
            }
            cb(fn, result);
            return args;
          };
        };
        return function(cb) {
          var initialArgs;
          initialArgs = slice.call(toArray(arguments).slice(1));
          return fns.reduce(reducer(cb), initialArgs);
        };
      };
      isValidEmail = function(email) {
        return EMAIL_PATTERN.test(email);
      };
      isMinimumLength = function(minLength) {
        return function(text) {
          return text.length >= minLength;
        };
      };
      hasCapitalLetter = function(text) {
        return text.toLowerCase() !== text;
      };
      hasDigit = function(text) {
        return /[0-9]/.test(text);
      };
      selectPassword = createObjectSelector('password');
      selectEmail = createObjectSelector('email');
      setup = function() {
        var emailField, errorList, formElement, passwdCapitalReq, passwdDigitReq, passwdLengthReq, passwordField, validEmailReq, validator;
        formElement = $('form[name="sign_in"]');
        emailField = formElement.find('input:text').first();
        passwordField = formElement.find('input:password').first();
        errorList = $('ul.errors').children();
        validEmailReq = errorList[0], passwdLengthReq = errorList[1], passwdCapitalReq = errorList[2], passwdDigitReq = errorList[3];
        errorList.hide();
        validator = sequential([new Validation(selectEmail(isValidEmail), validEmailReq), new Validation(selectPassword(isMinimumLength(8)), passwdLengthReq), new Validation(selectPassword(hasCapitalLetter), passwdCapitalReq), new Validation(selectPassword(hasDigit), passwdDigitReq)]);
        return formElement.submit(function(event) {
          var fieldValues, resultHandler;
          resultHandler = function(validation, passed) {
            if (!passed) {
              validation.showElement();
            }
            if (passed) {
              return validation.hideElement();
            }
          };
          fieldValues = {
            email: emailField.val(),
            password: passwordField.val()
          };
          validator(resultHandler, fieldValues);
          return event.preventDefault();
        });
      };
      return setup();
    })(jQuery);
  });

}).call(this);
